// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Modèle de données pour les rôles

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Relation many-to-many avec les utilisateurs
  users       User[]
}

// Modèle de données pour les utilisateurs
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String // Notez que vous devriez utiliser un cryptage approprié pour le mot de passe en production
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  filename  String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
}

model Image {
  id        Int      @id @default(autoincrement())
  title     String
  alt       String
  file      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
}

model Log {
  id     Int      @id @default(autoincrement())
  action String
  color  String
  user   String
  date   DateTime @default(now())
}

model Stats_web {
  id    Int      @id @default(autoincrement())
  count Int
  page  String
  date  DateTime @default(now())
}

model Stats_Api {
  id                  Int      @id @default(autoincrement())
  timestamp           DateTime @default(now())
  totalRequests       Int
  averageResponseTime Float
  statusCodeCounts    Json
  averageResponseSize Float
  date                DateTime @default(now())
}
